{
    "version": "https://jsonfeed.org/version/1",
    "title": "IT Články",
    "description": "",
    "home_page_url": "https://itclanky.cz",
    "feed_url": "https://itclanky.cz/feed.json",
    "user_comment": "",
    "author": {
        "name": "MS"
    },
    "items": [
        {
            "id": "https://itclanky.cz/reseni-problemu-s-dfsr.html",
            "url": "https://itclanky.cz/reseni-problemu-s-dfsr.html",
            "title": "Řešení problému s DFSR",
            "summary": "Pokud pracujete z Active Directory delší dobu, jste obeznámení s tím, jak fungoval troubleshooting FRS (File-system Replications Service). Je to velmi podobný způsob opravy, kdy se jedna replikace nominuje jako autoritativní a následně se musí přemluvit ostatní DCs k replikaci z tohoto DC. U FSR&hellip;",
            "content_html": "<p>Pokud pracujete z Active Directory delší dobu, jste obeznámení s tím, jak fungoval troubleshooting FRS (File-system Replications Service). Je to velmi podobný způsob opravy, kdy se jedna replikace nominuje jako autoritativní a následně se musí přemluvit ostatní DCs k replikaci z tohoto DC. </p>\n<p>U FSR to bylo řešeno prostřednictvím úplravy registrů. U DFSR je celá služba založena na replikaci pomocí DFS-R technologie a ta je přímo závislá na konfiguraci AD a tak lze bude hrát velkou roli ADSIEdit. </p>\n<p>Pro otestování stavu replikace lze posloužit tento PowerShell skript:</p>\n<p> </p>\n<pre class=\"language-apacheconf\"><code>$output = [string] (cmd.exe /c \"For /f %r IN ('dsquery server -o rdn') do @echo %i `&amp;`&amp; @wmic /node:`\"%r`\" /namespace:\\\\root\\microsoftdfs path dfsrreplicatedfolderinfo WHERE replicatedfoldername='SYSVOL share' get replicatedfoldername,state \" )\n$processing = $output. replace(\" \",\" \").Replace(\" \",\" \").replace(\" \",\" \").Replace(\" \",\" \").split(\" \")\n$result = ($processing | ?{$_ -match '^[0-9]+$' } | ?{$_ -ne \"4\"}).count\n$success = ($processing | ?{$_ -match '^[0-9]+$' } | ?{$_ -eq \"4\"}).count\n\n\n\n\nif (($success -gt 0 ) -and ($result -ne 0))\n{$returnvalue = 0}\nelse\n{$returnvalue = 1}</code></pre>\n<p>Pro vyřešení problému pak lze použít tyto odkazy:</p>\n<p><a>https://learn.microsoft.com/en-us/troubleshoot/windows-server/group-policy/force-authoritative-non-authoritative-synchronization</a></p>\n<p><a>https://saubhik.wordpress.com/2020/07/11/dfsr-restore-non-authoritative-d2-authoritative-d4/</a></p>\n<p> </p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell",
                   "AD"
            ],
            "date_published": "2024-02-12T19:46:10+01:00",
            "date_modified": "2024-02-12T19:46:10+01:00"
        },
        {
            "id": "https://itclanky.cz/graph-api-a-prace-s-odatanextlink.html",
            "url": "https://itclanky.cz/graph-api-a-prace-s-odatanextlink.html",
            "title": "Graph API a práce s @odata.nextLink",
            "summary": "Zde je příklad, kdy Graph API vrátí nadlimitní množství odpovědí (přesáhl jsem limit 100 objektů v odpovědi). Následující kód bude zpracovávat každou odpověď a ověřovat, zda návratová data obsahují @odata.nextLink, což poukazuje na to, že návratová data opět přesáhly limit. Takto skript postupně vytahuje dávky&hellip;",
            "content_html": "<p>Zde je příklad, kdy Graph API vrátí nadlimitní množství odpovědí (přesáhl jsem limit 100 objektů v odpovědi). Následující kód bude zpracovávat každou odpověď a ověřovat, zda návratová data obsahují @odata.nextLink, což poukazuje na to, že návratová data opět přesáhly limit. Takto skript postupně vytahuje dávky dat dokud návratová data obsahuji @odata.nextLink. Co teprve, když začně MS Graph API s throttlingem, to už je pak horší :). Pro základní \"domácí žvýkání\" to ale bude stačit.</p>\n<p> </p>\n<pre class=\"language-apacheconf\"><code>$allusers=@()\n\n\n$users = Invoke-RestMethod -Headers @{Authorization = \"Bearer $($token.AccessToken)\" } -Uri 'https://graph.microsoft.com/v1.0/users' -Method Get\n\n$allusers = $allusers + $users.value\n\nwhile($users.'@odata.nextLink' -ne $null)\n{\n$users = Invoke-RestMethod -Headers @{Authorization = \"Bearer $($token.AccessToken)\" } -Uri $users.'@odata.nextLink' -Method Get\n$allusers = $allusers + $users.value \n}\n\n#Returns users from aggregated varriable \n\n$allusers</code></pre>\n<p> </p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell"
            ],
            "date_published": "2024-01-29T19:32:37+01:00",
            "date_modified": "2024-01-29T19:32:37+01:00"
        },
        {
            "id": "https://itclanky.cz/pripojeni-k-entra-id-pres-ms-graph.html",
            "url": "https://itclanky.cz/pripojeni-k-entra-id-pres-ms-graph.html",
            "title": "Připojení k Entra ID přes MS Graph",
            "summary": "Tento článek navazuje na předchozí článek týkající se konfigurace Service Principal pro připojení k Entra ID. K tomu abychom mohli iniciovat připojení k MS Graph použiji v tomto postupu klihovnu msal.ps , kterou musíme nainstalovat. Pokud jste postupovali podle předchozího návodu, tak by tento postup&hellip;",
            "content_html": "<p>Tento článek navazuje na předchozí <a href=\"https://itclanky.cz/pristup-na-entra-id-pomoci-service-principal.html\">článek</a> týkající se konfigurace Service Principal pro připojení k Entra ID.</p>\n<p>K tomu abychom mohli iniciovat připojení k MS Graph použiji v tomto postupu klihovnu  <a href=\"https://github.com/AzureAD/MSAL.PS\">msal.ps</a> , kterou musíme nainstalovat. Pokud jste postupovali podle předchozího návodu, tak by tento postup měl fungovat \"out of box\". Pokud má Váš Service Principal nižší práva, pak budete muset přidat práva registrované aplikace v nastavní <a href=\"https://stackoverflow.com/questions/61457429/how-to-add-api-permissions-to-an-azure-app-registration-using-powershell\">API práv</a>.</p>\n<p>This article continues based on <a href=\"https://mynotes.cz/?p=708\">prevous article</a> where application principle was used for authentication to AzureAD over powershell module AzureAD.</p>\n<p>V následující kódu upravte:</p>\n<ul>\n<li>nahraďte řetězec YourCertThumprint thumbprintem vašeho certifikátu</li>\n<li>nahraďte řetězed YourApplicationID svým ID (postup jak ID zjistit je zmíněn ve <a href=\"https://itclanky.cz/pristup-na-entra-id-pomoci-service-principal.html\">zmíněném článku</a>)</li>\n<li>nahraďte řetězec YourTenantID s ID vašeho tenantu</li>\n</ul>\n<pre class=\"language-apacheconf\"><code>import-module msal.ps\n$cert = Get-ChildItem -Path Cert:LocalMachine\\MY | ?{$_.Thumbprint -eq „YourCertThumbprint“ }\n\n$token = Get-MsalToken -ClientId YourApplicationID -ClientCertificate $cert -TenantId YourTenantID\n\nInvoke-RestMethod -Headers @{Authorization = „Bearer $($token.AccessToken)“ } `\n-Uri ‚https://graph.microsoft.com/v1.0/users‘ `\n-Method Get</code></pre>\n<p>Tento článek je spíše poznámka, ale mohl by být užitečný někomu, který bojuje s prvnotním rozčarováním Grap API. </p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell"
            ],
            "date_published": "2024-01-29T19:25:28+01:00",
            "date_modified": "2024-01-29T19:25:28+01:00"
        },
        {
            "id": "https://itclanky.cz/pristup-na-entra-id-pomoci-service-principal.html",
            "url": "https://itclanky.cz/pristup-na-entra-id-pomoci-service-principal.html",
            "title": "Přístup na Entra ID pomocí Service Principal",
            "summary": "Jeden z hlavních důvodů, proč to řešit je pravděpodoně to, že Global Admins / Privilegované Role mají většinou přístup podmíněný zadáním MFA a to blokuje použití těchto účtů pro automatizace (což je dobře). Než začneme rozebírat tuto prolematiku, tak musím zmínit, že nejsem původním autorem&hellip;",
            "content_html": "<p>Jeden z hlavních důvodů, proč to řešit je pravděpodoně to, že Global Admins / Privilegované Role mají většinou přístup podmíněný zadáním MFA a to blokuje použití těchto účtů pro automatizace (což je dobře). Než začneme rozebírat tuto prolematiku, tak musím zmínit, že nejsem původním autorem tohoto članku a pouze jsem ho z větší části převzal od někoho jiného. Je důležité uvědomit si jako roli hrají certifikáty při ověřování. Pokud použijeme pro ověření Service Principal certifikát, tak ztráta kontroly nad soukromým klíčem vede ke ztrátě kontroly nad Identity Principal..</p>\n<p>Než budeme pokračovat, raději si spusťte PowerShell ISE v elevovaném režimu, protože některé operacu budou elevaci přímo vyžadovat a mohlo by dojít k situaci, že nebudete moct dál pokračovat v postupu.</p>\n<p>Budete muset iniciovat připojení k Entra ID což budepotřebovat PowerShell modul AzureAD nebo AzureADPreview. Ať už použijete jakýkoliv z těchto modulů , použijte tyto příkazy:</p>\n<pre class=\"language-apacheconf\"><code>import-module azuread \n# or import-module azureadpreview\nconnect-azuread -tenantID IDoftenant</code></pre>\n<p>Následně nadefinujte $pwd proměnnou, která bude obsahovat heslo k pfx souboru.</p>\n<pre class=\"language-apacheconf\"><code>$pwd = \"plaintext password\"</code></pre>\n<p>Vytvořte složku, kde bude pfx soubor dočasně uložen, v tomto příkladu jsem použil cestu C:\\temp. Dále nedefinujte -DNSName hodnotou, která reprezentuje jméno tenantu. </p>\n<pre class=\"language-apacheconf\"><code>$notAfter = (Get-Date).AddMonths(6) # Valid for 6 months\n$thumb = (New-SelfSignedCertificate -DnsName \"mytestdomain.onmicrosoft.com\" -CertStoreLocation \"cert:\\LocalMachine\\My\" -KeyExportPolicy Exportable -Provider \"Microsoft Enhanced RSA and AES Cryptographic Provider\" -NotAfter $notAfter).Thumbprint\n$pwd = ConvertTo-SecureString -String $pwd -Force -AsPlainText\nExport-PfxCertificate -cert \"cert:\\localmachine\\my\\$thumb\" -FilePath c:\\temp\\examplecert.pfx -Password $pwd</code></pre>\n<p>Načtěte certifikát, aby mohl být použitý v Entra ID</p>\n<pre class=\"language-apacheconf\"><code>$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(\"C:\\temp\\examplecert.pfx\", $pwd)\n$keyValue = [System.Convert]::ToBase64String($cert.GetRawCertData())</code></pre>\n<p>Prosím upravte hodnotu  IdentifierUris tak, aby to odpovídal jménu tenantu. Upravte  DisplayName and CuctomeKeyIdentifier podle potřeby. </p>\n<pre class=\"language-apacheconf\"><code>$application = New-AzureADApplication -DisplayName \"test123\" -IdentifierUris \"https://mytestdomain.onmicrosoft.com\"\nNew-AzureADApplicationKeyCredential -ObjectId $application.ObjectId -CustomKeyIdentifier \"Test123\" -Type AsymmetricX509Cert -Usage Verify -Value $keyValue -EndDate $notAfter</code></pre>\n<p>Připravte Service Principle pro novou aplikaci</p>\n<pre class=\"language-apacheconf\"><code>$sp=New-AzureADServicePrincipal -AppId $application.AppId</code></pre>\n<p>Teď nastavíme roli pro naši novou aplikaci. Můžete zvolit jakoukoliv roli, role lze vylistovat i pomocí následujicího commandletu. V mém případě budu potřebovat roli Global Administrator, proto vyberu roli \"Global Admins\" .</p>\n<pre class=\"language-apacheconf\"><code>Get-AzureADDirectoryRole</code></pre>\n<p>Zde je už příkaz na přidání role.</p>\n<pre class=\"language-apacheconf\"><code>Add-AzureADDirectoryRoleMember -ObjectId (Get-AzureADDirectoryRole | where-object {$_.DisplayName -eq \"Global Administrator\"}).Objectid -RefObjectId $sp.ObjectId</code></pre>\n<p>Pro přidáni do tentantu můžete použít násedujicí kód, prosim upravte:</p>\n<ul>\n<li>YourTenantID (Tenant ID Vašeho tenantu)</li>\n<li>YourApplicationID (v mém případě bych získal toto ID pomocí příkazu Get-AzureADApplication -SearchString „test123“)</li>\n<li>YourCertThumbprint (ten získáte tak že otevřete certifikáty počítače, následně poklepáte na certifikát, který jsme dříve vytvořili, kliknete na Details a thumbprint naleznete v poli Thumbprint)</li>\n</ul>\n<pre class=\"language-apacheconf\"><code>Connect-AzureAD -TenantId YourTenantID -ApplicationId YourApplicationID -CertificateThumbprint YourCertThumbprint</code></pre>\n<p>Původní zdroj: <a href=\"https://learn.microsoft.com/en-us/powershell/azure/active-directory/signing-in-service-principal?view=azureadps-2.0\">https://learn.microsoft.com/en-us/powershell/azure/active-directory/signing-in-service-principal?view=azureadps-2.0</a></p>\n<p> </p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell"
            ],
            "date_published": "2024-01-28T21:57:39+01:00",
            "date_modified": "2024-01-28T21:57:56+01:00"
        },
        {
            "id": "https://itclanky.cz/full-text-search-v-powershellu.html",
            "url": "https://itclanky.cz/full-text-search-v-powershellu.html",
            "title": "Full text search v PowerShellu",
            "summary": "Problém hledání textu Někdy je nutné najít na systému stringový řetězec a na systému není žádný tool typu Total Commander. Navíc pokud jde o hledání v příkazové řádce, moc nám toho nezbývá. Zde se PowerShell víc než hodí. V tomto příkladu budeme hledat extový řetězec&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1hl7hcfhi20\">Problém hledání textu</a></li>\n<li><a href=\"#mcetoc_1hl7hcfhi21\">Hledání textového řetězce v určitém adresáři.</a></li>\n</ul>\n</div>\n<h1 id=\"mcetoc_1hl7hcfhi20\">Problém hledání textu</h1>\n<p>Někdy je nutné najít na systému stringový řetězec a na systému není žádný tool typu Total Commander. Navíc pokud jde o hledání v příkazové řádce, moc nám toho nezbývá. Zde se PowerShell víc než hodí. </p>\n<h1 id=\"mcetoc_1hl7hcfhi21\">Hledání textového řetězce v určitém adresáři.</h1>\n<p>V tomto příkladu budeme hledat extový řetězec \"JoeDoe\" v adresáři \"C:\\test\". </p>\n<pre class=\"language-apacheconf\"><code>get-childitem -Path \"C:\\Test\" | Select-String \"JoeDoe\"</code></pre>\n<p>Vysledek je následující, jak je patrné, nejen že výstup vrátí výskyt v určitém souboru, ale také na jakém řádku se řetězec vyskytoval. </p>\n<p> </p>\n<pre class=\"language-apacheconf\"><code>get-childitem -Path \"C:\\Test\" | Select-String \"JoeDoe\"\n\nC:\\Test\\file1.txt:2:JoeDoe\nC:\\Test\\file2.txt:6:JoeDoe</code></pre>\n<p>Select-String umožňuje spoustu variací a výstup může být víc než užitečný. Doporučuji prosudovat dokumentaci commandletu:</p>\n<p><a href=\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-7.4\">Select-String (Microsoft.PowerShell.Utility) - PowerShell | Microsoft Learn</a></p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell"
            ],
            "date_published": "2024-01-28T09:00:02+01:00",
            "date_modified": "2024-01-28T09:03:17+01:00"
        },
        {
            "id": "https://itclanky.cz/create-array.html",
            "url": "https://itclanky.cz/create-array.html",
            "title": "Pole",
            "summary": "Příklad vytvoření podle, $outputArray je vytovoření instance pole, kde následně vkládáme do tohoto pole objekt $Record, který má nadeklarované 3 proměnne, jako další proměnná attr4 je vkládán až v samotném kódu funkce. Následně se objekt přidává do pole $output array. $OutputArray = @() #/in loop&hellip;",
            "content_html": "<p>Příklad vytvoření podle, $outputArray je vytovoření instance pole, kde následně vkládáme do tohoto pole objekt $Record, který má nadeklarované 3 proměnne, jako další proměnná attr4 je vkládán až v samotném kódu funkce.  </p>\n<p>Následně se objekt přidává do pole $output array. </p>\n<pre class=\"language-apacheconf\"><code>$OutputArray = @()\n\n#/in loop\n\n$Record = @{\n\"attr1\" = \"Value1\"\n\"attr2\" = \"Value2\"\n\"attr3\" = \"Value3\"\n}\n\n#$Record =@{}\n\n$Record.\"attr4\" = \"Value4\"\n\n$objrecord = New-Object PSObject -property $Record\n$OutputArray += $objrecord\n\n#/in loop\n\n$OutputArray | out-gridview</code></pre>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://itclanky.cz/media/posts/2/gallery/2024-01-27-21_24_42-Windows-PowerShell-ISE.png\" data-size=\"685x565\"><img loading=\"lazy\" src=\"https://itclanky.cz/media/posts/2/gallery/2024-01-27-21_24_42-Windows-PowerShell-ISE-thumbnail.png\" alt=\"Pole Výsup z ISE\" width=\"685\" height=\"565\"></a></figure>\n</div></div>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "poweshell"
            ],
            "date_published": "2024-01-27T21:17:44+01:00",
            "date_modified": "2024-01-28T09:03:26+01:00"
        },
        {
            "id": "https://itclanky.cz/vytejte-na-mych-strankach.html",
            "url": "https://itclanky.cz/vytejte-na-mych-strankach.html",
            "title": "Výtejte na mých stránkách",
            "summary": "Prní článek vůbec Cílem tohoto blogu je sepisovat články týkající se IT věcí, konrétněji se budu zaměřovat na problematiku Identity managementu na Microsoft technologiích. Dále pak velkou část budou trořit tipy a triky v PowerShellu. Snad se Vám tyto stránky hodí a možná zde najdete&hellip;",
            "content_html": "\n    <h2 id=\"prni-clanek-vubec\">\n      Prní článek vůbec\n    </h2>\n\n  <p>\n    Cílem tohoto blogu je sepisovat články týkající se IT věcí, konrétněji se budu zaměřovat na problematiku Identity managementu na Microsoft technologiích. Dále pak velkou část budou trořit tipy a triky v PowerShellu.\n  </p>\n\n  <p>\n    Snad se Vám tyto stránky hodí a možná zde najdete i něco, co jste doposud nevěděli.&nbsp;\n  </p>",
            "author": {
                "name": "MS"
            },
            "tags": [
                   "general"
            ],
            "date_published": "2024-01-27T21:01:37+01:00",
            "date_modified": "2024-01-28T21:30:00+01:00"
        }
    ]
}
